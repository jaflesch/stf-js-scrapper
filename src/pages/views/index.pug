extends layout

block variables 
  - var page_title = 'Exemplo';

append title 
    title= (page_title || 'LEAF | UFRGS 2022')

block chart 
  div(style="width:80%; height:auto;")
    canvas#myChart 
    div 
      p#labels
        each relator in chart ? chart : []
          span= relator.nome+','+relator.count
  
  script.
    $(document).ready(() => {
      Chart.defaults.set('plugins.datalabels', {
        color: '#FE777B'
      });

      const dt = [];
      $('#labels span').each(function(i, el) {
          const span = $(el);
          const [nome, count] = span.text().split(',');
          dt.push({ 
            nome, 
            count: Number(count),
          })
      });

      console.log($('#labels span'), dt);
          
      //- if (t) {
        const labels = dt.map(d => d.nome);

        const data = {
          labels,
          datasets: [{
            label: 'Ac처rd찾os',
            backgroundColor: ['#004c6d','#246484','#3e7d9c','#5797b4','#70b2cd','#8acee6','#a4eaff'],
            borderColor: ['#004c6d','#246484','#3e7d9c','#5797b4','#70b2cd','#8acee6','#a4eaff'],
            borderWidth: 0,
            borderAlign: 'inner',
            data: dt.map(d => d.count),
            datalabels: {
              color: '#ff0000'
            }
          }]
        };

        const config = {
          type: 'bar',
          data: data,
          options: {
            responsive: true,
            plugins: {
              legend: {
                position: 'right',
                display: false,
              },
              title: {
                display: true,
                text: 'Ac처rd찾os / Relator (2010)'
              },
            },
          },
          tooltips: {
            enabled: false
          },
          animation: {
            duration: 0,
            onComplete: function () {
              // render the value of the chart above the bar
              var ctx = this.chart.ctx;
              ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);
              ctx.fillStyle = this.chart.config.options.defaultFontColor;
              ctx.textAlign = 'center';
              ctx.textBaseline = 'bottom';
              this.data.datasets.forEach(function (dataset) {
                for (var i = 0; i < dataset.data.length; i++) {
                  var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model;
                  ctx.fillText(dataset.data[i], model.x, model.y - 5);
                }
              });
            }
          }
        };
      //- }

      const myChart = new Chart(
        $('#myChart'), config
      );  

      var DATA_COUNT = 10;
      //var labels = [];

      //Utils.srand(2);

      for (var i = 0; i < DATA_COUNT; ++i) {
        labels.push('' + i);
      }

      var opt = {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            backgroundColor: '#000',
            data: labels,
            datalabels: {
              align: 'start',
              anchor: 'start'
            }
          }, {
            backgroundColor: '#ff00ff',
            data: labels,
            datalabels: {
              align: 'center',
              anchor: 'center'
            }
          }, {
            backgroundColor: '#aaa',
            data: labels,
            datalabels: {
              anchor: 'end',
              align: 'end',
            }
          }]
        },
        options: {
          plugins: {
            datalabels: {
              color: 'white',
              display: function(context) {
                return context.dataset.data[context.dataIndex] > 0;
              },
              font: {
                weight: 'bold'
              },
              formatter: Math.round
            }
          },

          // Core options
          aspectRatio: 5 / 3,
          layout: {
            padding: {
              top: 24,
              right: 16,
              bottom: 0,
              left: 8
            }
          },
          elements: {
            line: {
              fill: false
            },
            point: {
              hoverRadius: 7,
              radius: 5
            }
          },
          scales: {
            x: {
              stacked: true
            },
            y: {
              stacked: true
            }
          }
        }
      }

      //- var ctx = document.getElementById('myChart');
      //- Chart.register(ChartDataLabels);
      //- //- Chart.defaults.global.plugins.datalabels.anchor = 'end';
      //- //- Chart.defaults.global.plugins.datalabels.align = 'end';
      //- Chart.defaults.set('plugins.datalabels', {
      //-   align: 'end',
      //-   anchor: 'end'
      //- });
      //- var pieChart = new Chart(ctx, opt);
    })
    