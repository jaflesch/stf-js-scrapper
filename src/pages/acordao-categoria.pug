extends templates/layout

block variables 
  - var page_title = 'Órgão julgador por ano';
  
append title 
    title= (page_title || 'LEAF | UFRGS 2022')

block chart 
  div(style="display:flex;align-items:center; gap: 32px;flex-direction:column;")
    div(style=(Number(limit) > 0 ? "width:75%;" : "height:150vh;width:100%"))
      canvas#myChart 
    div
      div#chart-labels(style='display:none; padding: 8px; border:1px solid #ddd;')
  script.
    $(document).ready(() => {
      Chart.register(ChartDataLabels);

      const dt = !{ chart };
      const chartData = dt.map(d => d.count);
      const labels = dt.map(d => d.categoryLabel);
      const colors = ['#4f81bd'];  
      
      const data = {
        labels,
        datasets: [{
          label: 'Acórdãos',
          backgroundColor: colors,
          borderWidth: 0,
          borderAlign: 'outer',
          data: chartData,
          datalabels: {
            color: '#FFCE56'
          },
        }]
      };

      const config = {
        data,
        type: 'bar',
        options: {
          indexAxis: 'y',
          scales: {
            y: {
              ticks: {
                crossAlign: 'far',
              }
            }
          },
          barPercentage: 0.8,
          categoryPercentage: 0.8,
          maintainAspectRatio: true,
          plugins: {
            labels: {
              render: 'percentage',
              fontColor: ['green', 'white', 'red'],
              precision: 2
            },
            legend: {
              display: false
            },
            title: { 
              display: false 
            },
            datalabels: {
              anchor: 'end',
              align: 'end',
              formatter: (val) => val,
              labels: {
                value: {
                  color: 'gray'
                }
              }
            },
          },
        },
        tooltips: {
          enabled: false
        },
        animation: {
          duration: 0,
          //-  onComplete: function () {
          //-   var ctx = this.chart.ctx;
          //-   console.log(ctx);
          //-   ctx.font = this.scale.font;
          //-   ctx.fillStyle = this.scale.textColor
          //-   ctx.textAlign = "center";
          //-   ctx.textBaseline = "bottom";

          //-   this.datasets.forEach(function (dataset) {
          //-       dataset.bars.forEach(function (bar) {
          //-           ctx.fillText(bar.value, bar.x, bar.y - 5);
          //-       });
          //-   })
          //- }
        }
      };

      const myChart = new Chart(
        $('#myChart'), config
      );

      $('#chart-labels').html(
        labels.map((l, i) => {
          return `
            <div style="display:flex;gap: 8px;margin-bottom: ${(i === labels.length - 1) ? 0 : '8px'}; align-items: center;">
              <div style='background-color:${colors[i % colors.length]};width:28px;height:28px;'></div>
              <span style='font-size: 14px;font-weight: 600'>${l} (${chartData[i]})</span>
            </div>
          `;
        }).join('')
      );    
    });
    